#lang racket
(provide floor)
(provide isLegalTile)
(provide getTile)

(define floor
	( vector 
		(vector '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'y 'y 'y '-)
		(vector '- '- '- '- 'g 'g 'v 'g 'g 'g 'g 'g 'g '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'y 'y 'y '-)
		(vector '- '- '- '- '- 'y 'y 'y 'g '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'v '- '-)
		(vector '- '- '- '- '- 'y 'y 'y 'g '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'g '- '-)
		(vector '- '- '- '- '- 'y 'y 'y '> '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'g '- '-)
		(vector '- '- '- '- '- '- '- '- 'g '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'g '- '-)
		(vector '- '- '- '- '- '- '- '- 'g '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'g '- '-)
		(vector 'b 'b 'b '- '- '- '- '- 'g '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'g '- '-)
		(vector 'r 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g '- '-)
		(vector 'r 'g 'g 'g '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'g '- '- '- '- '- 'g '- '- 'g '- '-)
		(vector 'r 'g 'g 'g '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'g '- '- '- '- '- 'g '- '- 'g '- '-)
		(vector 'r 'g 'g 'g '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '> 'y 'y 'y 'y 'y '> '- '- 'g '- '-)
		(vector 'r 'g 'g 'g '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'g '- '- '- '- '- 'g '- '- 'g '- '-)
		(vector 'r 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g 'g '- '-)
		(vector 'r 'g 'g 'g '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'g '- '- '- '- '- '- '- 'g '- '-)
		(vector 'b 'b 'b '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'y 'y 'y '< '- '- '- '- '- '- '- 'g '- '-)
		(vector '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'y 'y 'y 'g '- '- '- '- '- '- '- 'g '- '-)
		(vector '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'y 'y 'y 'g '- '- '- '- '- '- '- 'g '- '-)
		(vector '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'y 'y 'y 'g '- '- '- '- '- '- '- 'g '- '-)
		(vector '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'y 'y 'y '> '- '- '- '- '- '- '- 'g '- '-)
		(vector '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'g '- '- '- '- '- '- '- 'g '- '-)
		(vector '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'v '- '-)
		(vector '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'y 'y 'y '-)
		(vector '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- '- 'y 'y 'y '-)
))

(define getTile
  (lambda (x y grid)
    (vector-ref (vector-ref grid y) x)))

(define isLegalTile
  (lambda (x y grid)
    (cond 
      [(equal? (getTile x y grid) '-) #f]
      [(equal? (getTile x y grid) 'b) #f]
      [(equal? (getTile x y grid) 'y) #f]
      [else #t]
    )))
